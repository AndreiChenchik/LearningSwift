import Foundation

/// –§—É–Ω–∫—Ü–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã
///
/// –ò—Å—Å–ª–µ–¥—É–µ—Ç —Ñ–æ—Ä–º—ã –∂–∏–∑–Ω–∏ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏
///
func researchPlanet(shipName: String, planetName: String) -> [String] {
    print("‚¨áÔ∏è üåé –°—É–¥–Ω–æ \(shipName) –ø—Ä–∏—Å—Ç—É–ø–∏–ª–æ –∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é –ø–ª–∞–Ω–µ—Ç—ã \(planetName)")

    var foundSpeciesOnPlanet: [String] = []
    // –ò—Å—Å–ª–µ–¥—É–µ–º —Ñ–æ—Ä–º—ã –∂–∏–∑–Ω–∏ –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ `foundSpecies`...

    print("‚èπ üåé –°—É–¥–Ω–æ \(shipName) –ø–æ–∫–∏–¥–∞–µ—Ç –ø–ª–∞–Ω–µ—Ç—É \(planetName)")

    return foundSpeciesOnPlanet
}

/// –§—É–Ω–∫—Ü–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
///
/// –ü—Ä–æ—Ö–æ–¥–∏—Ç—Å—è –ø–æ –≤—Å–µ–º –ø–ª–∞–Ω–µ—Ç–∞–º —Å–∏—Å—Ç–µ–º—ã,
/// –∏—Å—Å–ª–µ–¥—É–µ—Ç —Ñ–æ—Ä–º—ã –∂–∏–∑–Ω–∏ –Ω–∞ –Ω–∏—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏
///
func researchSystem(shipName: String, systemName: String, systemPlanets: [String]) -> [String] {
    print("‚¨áÔ∏è üåû –°—É–¥–Ω–æ \(shipName) –ø—Ä–∏–±—ã–ª–æ –≤ —Å–∏—Å—Ç–µ–º—É \(systemName)")
    print("‚ÑπÔ∏è –ü—Ä–µ–¥—Å—Ç–æ–∏—Ç –∏–∑—É—á–∏—Ç—å \(systemPlanets.count) –ø–ª–∞–Ω–µ—Ç\n")

    var foundSpeciesInSystem: [String] = []
    for planetName in systemPlanets {
        let foundSpeciesOnPlanet = researchPlanet(shipName: shipName, planetName: planetName)
        foundSpeciesInSystem.append(contentsOf: foundSpeciesOnPlanet)
        print("‚ÑπÔ∏è –ù–∞ –ø–ª–∞–Ω–µ—Ç–µ \(planetName) –Ω–∞–π–¥–µ–Ω–æ \(foundSpeciesOnPlanet.count) —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏\n")
    }

    print("‚èπ üåû –°—É–¥–Ω–æ \(shipName) –ø–æ–∫–∏–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É \(systemName)")

    return foundSpeciesInSystem
}

/// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≥–∞–ª–∞–∫—Ç–∏–∫–∏
///
/// –ü—Ä–æ—Ö–æ–¥–∏—Ç—Å—è –ø–æ –≤—Å–µ–º —Å–∏—Å—Ç–µ–º–∞–º –∏ –ø–ª–∞–Ω–µ—Ç–∞–º –≥–∞–ª–∞–∫—Ç–∏–∫–∏,
/// –∏—Å—Å–ª–µ–¥—É–µ—Ç —Ñ–æ—Ä–º—ã –∂–∏–∑–Ω–∏ –Ω–∞ –Ω–∏—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏
///
func researchGalaxy(
    shipName: String,
    galaxyName: String,
    systemsWithPlanets: [(String, [String])]
) -> [String] {
    print("‚¨áÔ∏è üåå –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –∏–∑—É—á–µ–Ω–∏—é –≥–∞–ª–∞–∫—Ç–∏–∫–∏ \(galaxyName)")
    print("‚ÑπÔ∏è –ü—Ä–µ–¥—Å—Ç–æ–∏—Ç –∏–∑—É—á–∏—Ç—å \(systemsWithPlanets.count) —Å–∏—Å—Ç–µ–º\n")

    var foundSpeciesInGalaxy: [String] = []
    for (systemName, systemPlanets) in systemsWithPlanets {
        let foundsSpeciesInSystem = researchSystem(
            shipName: shipName,
            systemName: systemName,
            systemPlanets: systemPlanets
        )
        foundSpeciesInGalaxy.append(contentsOf: foundsSpeciesInSystem)

        print("‚ÑπÔ∏è –í —Å–∏—Å—Ç–µ–º–µ \(systemName) –Ω–∞–π–¥–µ–Ω–æ \(foundsSpeciesInSystem.count) —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏\n")
    }

    print("‚èπ üåå –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≥–∞–ª–∞–∫—Ç–∏–∫–∏ \(galaxyName) –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

    return foundSpeciesInGalaxy
}

let shipName: String = "–¢—ã—Å—è—á–µ–ª–µ—Ç–Ω–∏–π —Å–æ–∫–æ–ª"
let galaxyName: String = "–ú–ª–µ—á–Ω—ã–π –ø—É—Ç—å"
let systemsWithPlanets: [(String, [String])] = [
    ("–ê—Ä–∫–∞–Ω–∏—Å", ["–¢–∞—Ç—É–∏–Ω"]),
    ("–°–æ–ª–Ω–µ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", ["–ú–µ—Ä–∫—É—Ä–∏–π", "–í–µ–Ω–µ—Ä–∞", "–ó–µ–º–ª—è", "–ú–∞—Ä—Å"])
]
let foundSpeciesInGalaxy = researchGalaxy(
    shipName: shipName,
    galaxyName: galaxyName,
    systemsWithPlanets: systemsWithPlanets
)
print("‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ \(foundSpeciesInGalaxy.count) —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏")
